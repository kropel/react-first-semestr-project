{"version":3,"sources":["components/Container/Container.js","components/Header/Header.js","components/Footer/Footer.js","components/Product/Product.js","services/products.service.js","components/ProductList/ProductList.js","components/TitleComponent/TitleComponent.js","components/HomePage/HomePage.js","components/Filter/InputFilter/InputFilter.js","components/Filter/FiltersList/FiltersList.js","components/Filter/Filter.js","components/CatalogPage/CatalogPage.js","components/AboutPage/AboutPabe.js","components/ErrorPage/ErrorPage.js","App.js","serviceWorker.js","index.js"],"names":["Container","children","className","Header","exact","to","Footer","Product","id","name","image","amount","manufacture","category","featured","src","alt","ProductService","products","filter","product","fraze","includes","value","toLowerCase","reduce","previouse","current","push","sort","ProductList","productList","getAllProduct","getFeaturedProductByCategory","getSearchElements","map","key","TitleComponent","pageTitle","title","useEffect","baseTitle","document","HomePage","InputFilter","type","checked","onChange","label","FiltersList","manufacturers","radioChecked","manu","lowerCase","Filter","filterCollback","allManufacturers","getAllManufacturers","unshift","baseManufacturers","useState","setManufacturers","radioChange","serachValue","searchChang","onClick","event","target","onFocus","length","CatalogPage","setValue","AboutPage","ErrorPage","App","path","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.88c18cb2.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Container = ({ children }) => <div className=\"container\">{children}</div>;\n\nContainer.propTypes = {\n  children: PropTypes.node\n};\n\nexport default Container;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport Container from \"components/Container/Container\";\n\nconst Header = () => (\n  <nav className=\"navbar\">\n    <Container>\n      <ul className=\"nav\">\n        <li>\n          <NavLink exact to=\"/\">\n            Home\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/catalog\">Catalog</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/about\">About</NavLink>\n        </li>\n      </ul>\n    </Container>\n  </nav>\n);\n\nexport default Header;\n","import React from \"react\";\nimport Container from \"components/Container/Container\";\n\nconst Footer = () => (\n  <footer>\n    <Container>\n      <p>\n        Shop Â© 2020 <br /> Designed by Andrzej\n      </p>\n    </Container>\n  </footer>\n);\n\nexport default Footer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Product = ({\n  id,\n  name,\n  image,\n  manufacture,\n  amount,\n  category,\n  featured\n}) => (\n  <div className=\"product\">\n    <img src={image} alt={name} />\n    <p className=\"price\">${amount}</p>\n    <h3>{name}</h3>\n  </div>\n);\n\nProduct.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  name: PropTypes.string.isRequired,\n  manufacture: PropTypes.string,\n  amount: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  category: PropTypes.string,\n  featured: PropTypes.bool\n};\n\nexport default Product;\n","import products from \"../mocks/products\";\n\nclass ProductService {\n  static getAllProduct() {\n    return products;\n  }\n\n  static getFeaturedProductByCategory(category) {\n    return products.filter(\n      (product) => product.category === category && product.featured\n    );\n  }\n\n  static getSearchElements(fraze) {\n    let productList = products.filter((product) => {\n      let includes = false;\n      for (let value of [\"name\", \"manufacture\", \"category\"]) {\n        if (typeof product[value] === \"string\" && !includes) {\n          includes = product[value].toLowerCase().includes(fraze.toLowerCase());\n        }\n      }\n      return includes;\n    });\n    return productList;\n  }\n\n  static getAllManufacturers() {\n    return products\n      .reduce((previouse, current) => {\n        if (!previouse.includes(current.manufacture)) {\n          previouse.push(current.manufacture);\n        }\n        return previouse;\n      }, [])\n      .sort();\n  }\n}\n\nexport default ProductService;\n","import React from \"react\";\nimport Product from \"components/Product/Product\";\nimport ProductService from \"../../services/products.service\";\nimport PropTypes from \"prop-types\";\n\nconst ProductList = ({ value, featured }) => {\n  let productList;\n  if (value === \"all\") {\n    productList = ProductService.getAllProduct();\n  } else if (featured) {\n    productList = ProductService.getFeaturedProductByCategory(value);\n  } else if (!!value) {\n    productList = ProductService.getSearchElements(value);\n  }\n\n  return (\n    <div className=\"products\">\n      {productList.map((product) => (\n        <Product {...product} key={product.id} />\n      ))}\n    </div>\n  );\n};\n\nProductList.propTypes = {\n  value: PropTypes.string.isRequired,\n  featured: PropTypes.bool\n};\n\nexport default ProductList;\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TitleComponent = ({ title }) => {\n  const pageTitle = title;\n  useEffect(() => {\n    const baseTitle = document.title;\n    document.title = baseTitle + ` - ${pageTitle}`;\n    return () => (document.title = baseTitle);\n  }, [pageTitle]);\n  return <h1 className=\"header-big\">{pageTitle}</h1>;\n};\n\nTitleComponent.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nexport default TitleComponent;\n","import React from \"react\";\nimport ProductList from \"components/ProductList/ProductList\";\nimport Container from \"components/Container/Container\";\nimport TitleComponent from \"components/TitleComponent/TitleComponent\";\nimport PropTypes from \"prop-types\";\n\nconst HomePage = ({ title }) => {\n  return (\n    <Container>\n      <TitleComponent title={title} />\n\n      <h2 className=\"header-small\">Desktops</h2>\n      <ProductList value=\"desktop\" featured />\n\n      <h2 className=\"header-small\">Tablets</h2>\n      <ProductList value=\"tablet\" featured />\n    </Container>\n  );\n};\n\nHomePage.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nexport default HomePage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst InputFilter = ({ type, name, id, value, checked, onChange, label }) => (\n  <div>\n    <label>\n      <input\n        type={type}\n        name={name}\n        id={id}\n        value={value}\n        checked={checked}\n        onChange={onChange}\n      />\n      {label}\n    </label>\n  </div>\n);\n\nInputFilter.propTypes = {\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  checked: PropTypes.bool.isRequired,\n  onChange: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired\n};\n\nexport default InputFilter;\n","import React from \"react\";\nimport InputFilter from \"components/Filter/InputFilter/InputFilter\";\nimport PropTypes from \"prop-types\";\n\nconst FiltersList = ({ manufacturers, radioChecked, onChange }) => {\n  const filtersManufacturers = manufacturers.map((manu, key) => {\n    let lowerCase = manu.toLowerCase();\n    let checked = lowerCase === radioChecked;\n    return (\n      <InputFilter\n        key={key}\n        type=\"radio\"\n        name=\"manufacturere\"\n        id={lowerCase}\n        value={lowerCase}\n        checked={checked}\n        onChange={onChange}\n        label={manu}\n      />\n    );\n  });\n  return filtersManufacturers;\n};\n\nFiltersList.propTypes = {\n  manufacturers: PropTypes.arrayOf(PropTypes.string).isRequired,\n  radioChecked: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nexport default FiltersList;\n","import React, { useState } from \"react\";\nimport FiltersList from \"components/Filter/FiltersList/FiltersList\";\nimport ProductService from \"services/products.service\";\nimport PropTypes from \"prop-types\";\n\nconst Filter = ({ filterCollback }) => {\n  const allManufacturers = ProductService.getAllManufacturers();\n  allManufacturers.unshift(\"All\");\n  const baseManufacturers = [\"All\", \"Apple\", \"Dell\"];\n  const [manufacturers, setManufacturers] = useState(baseManufacturers);\n  const [radioChecked, radioChange] = useState(\"all\");\n  const [serachValue, searchChang] = useState(\"search...\");\n\n  const handleChange = (event) => {\n    radioChange(event.target.value);\n    filterCollback(event.target.value);\n  };\n\n  const handleSearch = (event) => {\n    searchChang(event.target.value);\n    if (!!event.target.value) {\n      filterCollback(event.target.value);\n    } else {\n      filterCollback(\"all\");\n    }\n  };\n\n  const handleClear = () => {\n    searchChang(\"search...\");\n    radioChange(\"all\");\n    filterCollback(\"all\");\n  };\n\n  const handleFocus = (event) => {\n    if (event.target.value === \"search...\") {\n      searchChang(\"\");\n    }\n  };\n\n  const handleMore = () => {\n    if (manufacturers.length === 3) {\n      setManufacturers(allManufacturers);\n    } else {\n      setManufacturers(baseManufacturers);\n    }\n  };\n\n  return (\n    <div className=\"filter\">\n      <div className=\"filter-header\">\n        <h4>Search</h4>\n        <span className=\"clear\" onClick={handleClear}>\n          Clear\n        </span>\n      </div>\n      <div>\n        <input\n          type=\"text\"\n          value={serachValue}\n          onChange={handleSearch}\n          onFocus={handleFocus}\n        />\n      </div>\n      <h4>Manufacturer</h4>\n      <div className=\"filter-list\">\n        <FiltersList\n          manufacturers={manufacturers}\n          radioChecked={radioChecked}\n          onChange={handleChange}\n        />\n        <span className=\"more\" onClick={handleMore}>\n          {manufacturers.length === 3 ? \"More\" : \"Less\"}\n        </span>\n      </div>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  filterCollback: PropTypes.func.isRequired\n};\n\nexport default Filter;\n","import React, { useState } from \"react\";\nimport ProductList from \"components/ProductList/ProductList\";\nimport Filter from \"components/Filter/Filter\";\nimport Container from \"components/Container/Container\";\nimport TitleComponent from \"components/TitleComponent/TitleComponent\";\nimport PropTypes from \"prop-types\";\n\nconst CatalogPage = ({ title }) => {\n  const [value, setValue] = useState(\"all\");\n\n  const filterCollback = (value) => setValue(value);\n\n  return (\n    <Container>\n      <TitleComponent title={title} />\n\n      <div className=\"catalog\">\n        <div className=\"column-left\">\n          <Filter filterCollback={filterCollback} />\n        </div>\n\n        <div className=\"column-right\">\n          <ProductList value={value} />\n        </div>\n      </div>\n    </Container>\n  );\n};\n\nCatalogPage.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nexport default CatalogPage;\n","import React from \"react\";\nimport Container from \"components/Container/Container\";\nimport TitleComponent from \"components/TitleComponent/TitleComponent\";\nimport PropTypes from \"prop-types\";\n\nconst AboutPage = ({ title }) => (\n  <Container>\n    <TitleComponent title={title} />\n    <p>\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris\n      scelerisque odio pharetra, rhoncus velit eget, feugiat magna. Integer ac\n      augue aliquam, tempor diam nec, pulvinar velit. Pellentesque et sem a diam\n      fringilla egestas nec vel metus. Etiam ac convallis leo. Vivamus vitae\n      volutpat nisl, mollis hendrerit libero. Vivamus sed lobortis ligula.\n      Suspendisse a nisi erat. Donec mi ante, condimentum nec efficitur non,\n      egestas et lorem. Duis at urna ut mauris fringilla dignissim at in odio.\n      Ut consectetur purus et maximus aliquam. Sed consectetur diam quis\n      accumsan condimentum. Proin porta condimentum velit quis convallis.\n    </p>\n    <p>\n      Donec mauris tellus, lobortis id dignissim id, luctus ut purus. Etiam\n      rutrum nibh consectetur purus tincidunt scelerisque. Etiam faucibus\n      volutpat lectus, quis blandit diam consectetur ac. In hac habitasse platea\n      dictumst. Sed rhoncus mattis condimentum. Vivamus sit amet mi volutpat\n      enim tincidunt fringilla. Etiam porttitor dolor eleifend felis consectetur\n      facilisis. Ut pulvinar sollicitudin erat, nec malesuada nunc scelerisque\n      nec. Aliquam vel dolor diam. Cras efficitur dignissim justo, ac tristique\n      tellus pellentesque pharetra. Quisque pharetra lectus molestie, posuere\n      lectus eget, tempor justo.\n    </p>\n  </Container>\n);\n\nAboutPage.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nexport default AboutPage;\n","import React from \"react\";\nimport Container from \"components/Container/Container\";\nimport TitleComponent from \"components/TitleComponent/TitleComponent\";\nimport PropTypes from \"prop-types\";\n\nconst ErrorPage = ({ title }) => (\n  <Container>\n    <TitleComponent title={title} />\n  </Container>\n);\n\nErrorPage.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nexport default ErrorPage;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Header from \"components/Header/Header\";\nimport Footer from \"components/Footer/Footer\";\nimport HomePage from \"components/HomePage/HomePage\";\nimport CatalogPage from \"components/CatalogPage/CatalogPage\";\nimport AboutPage from \"components/AboutPage/AboutPabe\";\nimport ErrorPage from \"components/ErrorPage/ErrorPage\";\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route exact path={[\"/\", \"/react-first-semestr-project\"]}>\n          <HomePage title={\"Welcome to our store\"} />\n        </Route>\n        <Route path=\"/catalog\">\n          <CatalogPage title={\"Catalog\"} />\n        </Route>\n        <Route path=\"/about\">\n          <AboutPage title={\"About\"} />\n        </Route>\n        <Route>\n          <ErrorPage title=\"Page not found\" />\n        </Route>\n      </Switch>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}